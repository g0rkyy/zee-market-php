<?php
// test_pgp.php - Arquivo para testar o sistema PGP
require_once 'includes/config.php';
require_once 'includes/pgp_system.php';

echo "<h2>üîß Teste do Sistema PGP</h2>";

// 1. Verificar phpseclib3
echo "<h3>1. Verificando phpseclib3:</h3>";
if (class_exists('\phpseclib3\Crypt\RSA')) {
    echo "‚úÖ phpseclib3 instalada corretamente!<br>";
    
    try {
        $rsa = \phpseclib3\Crypt\RSA::createKey(2048);
        echo "‚úÖ Gera√ß√£o de chaves RSA funcionando!<br>";
    } catch (Exception $e) {
        echo "‚ùå Erro na gera√ß√£o RSA: " . $e->getMessage() . "<br>";
    }
} else {
    echo "‚ùå phpseclib3 n√£o encontrada<br>";
}

// 2. Verificar conex√£o com banco
echo "<h3>2. Verificando conex√£o com banco:</h3>";
if (isset($conn) && $conn->ping()) {
    echo "‚úÖ Conex√£o com banco funcionando!<br>";
} else {
    echo "‚ùå Problema na conex√£o com banco<br>";
}

// 3. Testar inicializa√ß√£o do PGP
echo "<h3>3. Testando inicializa√ß√£o do PGP:</h3>";
try {
    $pgpSystem = new ZeeMarketPGP($conn);
    echo "‚úÖ Sistema PGP inicializado com sucesso!<br>";
    
    // 4. Verificar se usu√°rio tem chaves (se logado)
    if (isset($_SESSION['user_id'])) {
        echo "<h3>4. Verificando chaves do usu√°rio:</h3>";
        $hasKeys = $pgpSystem->userHasPgpKey($_SESSION['user_id']);
        echo $hasKeys ? "‚úÖ Usu√°rio tem chaves PGP<br>" : "‚ÑπÔ∏è Usu√°rio ainda n√£o tem chaves PGP<br>";
    }
    
    // 5. Testar gera√ß√£o de chaves mock
    echo "<h3>5. Testando gera√ß√£o de chaves (mock):</h3>";
    $testResult = $pgpSystem->generateUserKeyPair(
        9999, // ID fict√≠cio
        "Teste",
        "teste@zeemarket.local",
        "senhateste123"
    );
    
    if ($testResult['success']) {
        echo "‚úÖ Gera√ß√£o de chaves funcionando!<br>";
        echo "Key ID: " . $testResult['key_id'] . "<br>";
        echo "Fingerprint: " . substr($testResult['fingerprint'], 0, 20) . "...<br>";
    } else {
        echo "‚ùå Erro na gera√ß√£o: " . $testResult['error'] . "<br>";
    }
    
} catch (Exception $e) {
    echo "‚ùå Erro ao inicializar PGP: " . $e->getMessage() . "<br>";
}

// 6. Verificar tabelas do banco
echo "<h3>6. Verificando tabelas do banco:</h3>";
$tables = ['user_pgp_keys', 'encrypted_messages', 'pgp_signatures'];
foreach ($tables as $table) {
    $result = $conn->query("SHOW TABLES LIKE '$table'");
    echo $result->num_rows > 0 ? "‚úÖ Tabela $table existe<br>" : "‚ùå Tabela $table n√£o existe<br>";
}

echo "<h3>üéØ Resultado:</h3>";
echo "Se todos os itens acima est√£o com ‚úÖ, o sistema PGP est√° funcionando!<br>";
echo "Voc√™ pode acessar <a href='privacy_settings.php'>privacy_settings.php</a> para gerar suas chaves reais.";
?>